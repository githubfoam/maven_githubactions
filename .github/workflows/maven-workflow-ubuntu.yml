name: "maven CI workflow ubuntu"

on:
  push:
    # branches: [ $default-branch ]
    branches: [ dev ]
  # pull_request:
  #   branches: [ $default-branch ]

jobs:
  
  build-linux-job:
    name: "Specifying the JVM version and architecture on ubuntu-18.04"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    # - name: "Set up JDK 1.8"
    #   uses: actions/setup-java@v1
    #   with:
    #     java-version: 1.8
    - name: "Set up JDK 9.0.4 for x64"
      uses: actions/setup-java@v1
      with:
          java-version: '9.0.4'
          architecture: x64        
    # - name: Build with Maven
    #   run: mvn --batch-mode --update-snapshots verify
    # - name: Build with Maven
    #   run: mvn -B package --file pom.xml

# https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-java-with-maven
  build-linux-caching-job:
    name: "Caching dependencies on ubuntu-18.04"
    runs-on: ubuntu-latest #ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        architecture: x64  
    - name: "Cache Maven packages"
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: "Build with Maven"
      run: mvn --batch-mode --update-snapshots verify

  
# https://github.com/actions/setup-java
  publish-apache-maven-job:
    name: "Publishing using Apache Maven"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: "Build with Maven"
      run: mvn -B package --file pom.xml
    - name: "Publish to GitHub Packages Apache Maven"
      run: mvn deploy
      env:
        GITHUB_TOKEN: ${{ github.token }} # GITHUB_TOKEN is the default env for the password
    - name: "Set up Apache Maven Central"
      uses: actions/setup-java@v1
      with: # running setup-java again overwrites the settings.xml
        java-version: 1.8
        server-id: maven # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: MAVEN_USERNAME # env variable for username in deploy
        server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
        gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase
    - name: "Publish to Apache Maven Central"
      run: mvn deploy
      env:
        MAVEN_USERNAME: maven_username123
        MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}      